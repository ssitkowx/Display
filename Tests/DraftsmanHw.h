#pragma once 

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include "Font.h"
#include "Utils.h"
#include "SpiHw.h"
#include "Bitmap.h"
#include "Draftsman.h"
#include "gmock/gmock.h"

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

class DraftsmanHw final : public Draftsman <DraftsmanHw>
{
    friend Draftsman<DraftsmanHw>;

    public:
        explicit DraftsmanHw (const Config_t v_config, SpiHw & v_spi, Font & v_font) : Draftsman<DraftsmanHw>(v_config) { }
        ~DraftsmanHw () = default;

        MOCK_METHOD2       (DrawText , void    (std::string_view v_text, const Bitmap::Coordinates v_coordinates));
        MOCK_METHOD1       (sendLines, void    (const Bitmap & v_rect));
        MOCK_CONST_METHOD1 (calculate, uint8_t (const Bitmap::Dimensions & v_dimensions));

        uint8_t Calculate (const Bitmap::Dimensions & v_dimensions) const
        {
            return Draftsman <DraftsmanHw>::calculate (v_dimensions);
        }
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////